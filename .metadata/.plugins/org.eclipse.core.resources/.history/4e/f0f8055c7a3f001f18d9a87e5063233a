package com.actmecsgram.services;

import java.util.Date;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.actmecsgram.dto.UserDto;
import com.actmecsgram.models.User;
import com.actmecsgram.repositories.UserRepository;

@Service
public class UserService {
	@Autowired
	private UserRepository userRepository;
	
	public User createUser(UserDto userDto) {
		User user = new User();
		user.setFirst_name(userDto.getFirstName());
        user.setLast_name(userDto.getLastName());
        user.setEmail(userDto.getEmail());
        user.setUsername(userDto.getUsername());
        user.setPassword(userDto.getPassword());
        user.setDate_of_birth(userDto.getDateOfBirth());
        user.setProfile_pic(userDto.getProfilePic());
        user.setBio(userDto.getBio());
        user.setGender(userDto.getGender());
        user.setCreated_at(new Date());
        user.setUpdated_at(new Date());
        return userRepository.save(user);
		
	}
	public void deleteUser(Long id) {
        userRepository.deleteById(id);
    }
	public Optional<User> getUserById(Long id) {
		return userRepository.findById(id);
	}
	public User findByEmail(String email) {
		return userRepository.findByEmail(email);
		
	}
	public User findByUsername(String username) {
		return userRepository.findByUsername(username);
	}
	public User updateUser(Long id,UserDto userDto) {
		Optional<User> getUser = userRepository.findById(id);
		
		if(user.isPresent()) {
			User user = user.get();
			user.setFirst_name(userDto.getFirstName());
	        user.setLast_name(userDto.getLastName());
	        user.setEmail(userDto.getEmail());
	        user.setUsername(userDto.getUsername());
	        user.setPassword(userDto.getPassword());
	        user.setDate_of_birth(userDto.getDateOfBirth());
	        user.setProfile_pic(userDto.getProfilePic());
	        user.setBio(userDto.getBio());
	        user.setGender(userDto.getGender());
	        user.setCreated_at(new Date());
	        user.setUpdated_at(new Date());
	        return userRepository.save(user);
			
		}
	}
	
}
